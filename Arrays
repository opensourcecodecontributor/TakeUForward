1. Given an array, arr. The task is to find the largest element in it.
https://www.geeksforgeeks.org/problems/largest-element-in-array4009/0?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=largest-element-in-array

Examples:

Input: arr = [1, 8, 7, 56, 90]
Output: 90
Explanation: The largest element of the given array is 90.

class Solution {
    public static int largest(int n, int[] a) {
    int largest =a[0];
    for(int i=0; i<=n-1; i++){
        if(a[i]> largest){
            largest =a[i];
        }
    }
    return largest;
    }
}


2. Given an array arr, return the second largest distinct element from an array. If the second largest element doesn't exist then return -1.
https://www.geeksforgeeks.org/problems/second-largest3735/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=second-largest

Examples:

Input: arr = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.
Input: arr = [10, 10]
Output: -1
Explanation: The largest element of the array is 10 and the second largest element does not exist so answer is -1.
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

class Solution {
    public int print2largest(int[] a) {
        int n = a.length;
        if (n < 2) {
            return -1; // Return -1 if there are not enough elements
        }

        int largest = Integer.MIN_VALUE;
        int secondLargest = Integer.MIN_VALUE;

        for (int i = 0; i < n; i++) {
            if (a[i] > largest) {
                secondLargest = largest;
                largest = a[i];
            } else if (a[i] > secondLargest && a[i] != largest) {
                secondLargest = a[i];
            }
        }

        if (secondLargest == Integer.MIN_VALUE) {
            return -1; // Return -1 if there is no second largest element
        }

        return secondLargest;
    }
}



3. Check if Array Is Sorted and Rotated

public class Main {
	public static void main(String[] args) {
    int[] a = {1,2,3,4,5,6};
    //int[] a = {2,1,3,4,5,3};

    int n = a.length;
    boolean check = check(a,  n);
    
    if(check){
    System.out.println("Array is sorted");
    } else {
    System.out.println("Array is not sorted");
    }
	}
	
    public static boolean check(int[] a, int n) {
    for(int i = 1; i<n-1; i++){
    if(a[i]>=a[i-1]){
    return true;
    } else {
    return false;
    }
    }
    return true;  
    }
}
